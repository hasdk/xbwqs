% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_hbwqs.R
\name{hbwqs}
\alias{hbwqs}
\title{Hierarchical Bayesian Weighted Quantile Sum regression models for cross-cohort mixtures.}
\usage{
hbwqs(
  data,
  out,
  exp,
  cov = NULL,
  cohort,
  family,
  q = 4,
  chains = 1,
  seed = 99221,
  warmup = 1000,
  iter = 2000,
  thin = 1,
  verbose = F,
  max_treedepth = 20,
  adapt_delta = 0.999999
)
}
\arguments{
\item{data}{Data frame containing outcome, exposures and covariates measured in multiple cohorts. The data frame should also include a column with cohort indices for each row in \code{data}.}

\item{out}{Character vector of outcome name corresponding to the one in \code{data}.}

\item{exp}{Character vector of exposure names included in the mixture, corresponding to those in \code{data}.}

\item{cov}{Character vector covariate names, corresponding to those in \code{data}. Note that the categorical covariates need to be included as factors in \code{data}; otherwise, they will be treated as numeric in the model.}

\item{cohort}{Character representing the name of the cohort indices column in \code{data}.}

\item{family}{Character representing the outcome distribution used in the model. Currently, the supported outcome distributions include: \code{gaussian} for continuous, \code{binomial} for binary, and \code{poisson} for count outcomes. For compositional or proportion outcomes, please consult the \code{dbwqs()} function.}

\item{q}{Integer specifying how exposure variables will be ranked, e.g. in quartiles
(\code{q = 4}), deciles (\code{q = 10}), or percentiles (\code{q = 100}). Default is \code{q=4}.}

\item{chains}{Integer specifying the number of chains in Hamiltonian Monte Carlo algorithm.
Default value \code{chains = 1}.}

\item{seed}{Integer value to fix the seed for reproducibility of results.}

\item{warmup}{Integer spcifying the number of warmup iterations in HMC algorithm. Default value is \code{warmup = 2000}.}

\item{iter}{Integer specifying the number of iterations in HMC algorithm. Default value is \code{iter = 2000}. This value is chosen to make testing faster; it is recommended to use 10000 iterations in a full analysis.}

\item{thin}{Integer specifying the thinning parameter in Hamiltonian Monte Carlo algorithm. Default value is \code{thin=1}.}

\item{verbose}{Boolean value indicating if user wants to display additional information during fitting. Default value is \code{verbose=FALSE}.}

\item{max_treedepth}{Integer specifying maximum tree depth for HMC algorithm. Default value is \code{max_treedepth=20}.}

\item{adapt_delta}{Numeric value specifying the target average acceptance probability for HMC algorithm. Default value is \code{adapt_delta = 0.999999}.}
}
\value{
\code{hbwqs} returns a list containing the following elements:
\itemize{
\item \code{hbwqs_fit}: An \code{S4} object with all details of the Hamiltonian Monte Carlo, all the extractions
from the posterior distribution and all values of the parameters.
\item \code{cohort_slopes}: Table with the statistics of the cohort-specific regression coefficients: mean, standard deviation, lower and upper values for the 80\% and 95\% credible interval, effective sample size, and Rhat.
\item \code{cohort_intercepts}: Table with the statistics of the cohort-specific intercepts: mean, standard error of the mean,
standard deviation, lower and upper values for the 80\% and 95\% credible interval, effective sample size, and Rhat.
\item \code{mixweights}: Table with the statistics of the mixture weights: mean, standard error of the mean,
standard deviation, lower and upper values for the 80\% and 95\% credible interval, effective sample size, and Rhat.
\item \code{error_flag}: Flag indicating whether the fitting process was successful (0:success / -1: failed).
}
}
\description{
Fits the Hierarchical Bayesian Weighted Quantile Sum (HBWQS) regression for analyzing the effect of exposure mixtures across multiple cohort on continuous, binary or count outcomes. The function \code{bwqs} uses the package \code{rstan} which allows the connection with the STAN software written in C++ for bayesian inference; for further information, please consult https://mc-stan.org/.
}
\author{
Hachem Saddiki
}
